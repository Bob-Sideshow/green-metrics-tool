# syntax=docker/dockerfile:1
FROM ubuntu:22.04
ENV DEBIAN_FRONTEND=noninteractive


RUN rm -rf /var/lib/apt/lists/*
RUN apt update && \
    apt install net-tools postgresql-14 postgresql-contrib libpq-dev git -y
RUN rm -rf /var/lib/apt/lists/*

COPY ./structure.sql /tmp/structure.sql

# rm -rf /var/lib/apt/lists/* after the install command in order to prevent the cached apt lists (which are fetched by apt update) from ending up in the container image
USER postgres

ARG postgres_pw

# /etc/init.d must be connected with && instead of multiple RUN commands. Otherwise database will shut down in between
RUN /etc/init.d/postgresql start && \
    psql --command "ALTER USER postgres WITH PASSWORD '${postgres_pw}';" && \
    createdb --encoding=UTF-8 --owner="postgres" "green-coding" && \
    psql -d "green-coding" --command 'CREATE EXTENSION "uuid-ossp";' && \
    psql -U postgres -d "green-coding" < /tmp/structure.sql


RUN echo "listen_addresses = '*'" >> /etc/postgresql/14/main/postgresql.conf
RUN echo "local all postgres peer" > /etc/postgresql/14/main/pg_hba.conf
RUN echo "host green-coding postgres  0.0.0.0/0 md5" >> /etc/postgresql/14/main/pg_hba.conf
RUN echo "local green-coding postgres md5" >> /etc/postgresql/14/main/pg_hba.conf

RUN /etc/init.d/postgresql restart

EXPOSE 5432

CMD ["/usr/lib/postgresql/14/bin/postgres", "-D", "/var/lib/postgresql/14/main", "-c", "config_file=/etc/postgresql/14/main/postgresql.conf"]