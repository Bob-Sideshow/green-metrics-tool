API_URL = "__API_URL__"
METRICS_URL = "__METRICS_URL__"


METRIC_MAPPINGS = {
    ane_power_powermetrics_system: {
        clean_name: "ANE Power",
        explanation: "Apple Neural Engine",
        color: "orange",
        icon: "power off"
    },
    ane_energy_powermetrics_system: {
        clean_name: "ANE Energy",
        explanation: "Apple Neural Engine",
        color: "blue",
        icon: "battery three quarters"
    },
    gpu_power_powermetrics_system: {
        clean_name: "GPU Power",
        explanation: "Apple M1 GPU / Intel GPU",
        color: "orange",
        icon: "power off"
    },
    gpu_energy_powermetrics_system: {
        clean_name: "GPU Energy",
        explanation: "Apple M1 GPU / Intel GPU",
        color: "blue",
        icon: "battery three quarters"
    },

    cores_power_powermetrics_system: {
        clean_name: "CPU Power (Cores)",
        explanation: "Power of the cores only without GPU, ANE, GPU, DRAM etc.",
        color: "orange",
        icon: "power off"
    },
    cores_energy_powermetrics_system: {
        clean_name: "CPU Energy (Cores)",
        explanation: "Energy of the cores only without GPU, ANE, GPU, DRAM etc.",
        color: "blue",
        icon: "battery three quarters"
    },
    cpu_time_powermetrics_vm: {
        clean_name: "CPU time",
        explanation: "Effective execution time of the CPU for all cores combined",
        color: "brown",
        icon: "stopwatch"
    },
    disk_io_bytesread_powermetrics_vm: {
        clean_name: "Bytes read (HDD/SDD)",
        explanation: "Effective execution time of the CPU for all cores combined",
        color: "green",
        icon: "upload"
    },
    disk_io_byteswritten_powermetrics_vm: {
        clean_name: "Bytes written (HDD/SDD)",
        explanation: "Effective execution time of the CPU for all cores combined",
        color: "green",
        icon: "download"
    },
    docker_energy_impact_powermetrics_vm: {
        clean_name: "Energy impact",
        explanation: "macOS proprietary value for relative energy impact on device",
        color: "red",
        icon: "cat"
    },
    cpu_utilization_cgroup_container: {
        clean_name: "CPU %",
        explanation: "CPU Utilization per container",
        color: "yellow",
        icon: "microchip"
    },
    memory_total_cgroup_container: {
        clean_name: "Memory Usage",
        explanation: "Memory Usage per container",
        color: "purple",
        icon: "memory"
    },
    network_io_cgroup_container: {
        clean_name: "Network I/O",
        explanation: "Network I/O. Details on docs.green-coding.berlin/docs/measuring/metric-providers/network-io-cgroup-container",
        color: "olive",
        icon: "exchange alternate"
    },
    cpu_energy_rapl_msr_system: {
        clean_name: "CPU Energy (Package)",
        explanation: "RAPL based CPU energy of package domain",
        color: "blue",
        icon: "batter three quarters"
    },
    cpu_power_rapl_msr_system: {
        clean_name: "CPU Power (Package)",
        explanation: "Derived RAPL based CPU energy of package domain",
        color: "orange",
        icon: "power off"
    },
    cpu_utilization_procfs_system: {
        clean_name: "CPU %",
        explanation: "CPU Utilization of total system",
        color: "purple",
        icon: "power off"
    },
    memory_energy_rapl_msr_system: {
        clean_name: "Memory Energy (DRAM)",
        explanation: "RAPL based memory energy of DRAM domain",
        color: "blue",
        icon: "batter three quarters"
    },
    memory_power_rapl_msr_system: {
        clean_name: "Memory Power (DRAM)",
        explanation: "Derived RAPL based memory energy of DRAM domain",
        color: "orange",
        icon: "power off"
    },
}
