# syntax=docker/dockerfile:1
FROM ubuntu:22.04
ENV DEBIAN_FRONTEND=noninteractive

ARG postgres_pw

RUN rm -rf /var/lib/apt/lists/*
RUN apt update && \
    apt install python3 python3-pip gunicorn nginx libpq-dev git -y
RUN pip3 install psycopg2 flask pandas pyyaml
RUN rm -rf /var/lib/apt/lists/*

WORKDIR /var/www/green-metrics-tool

RUN git clone https://github.com/green-coding-berlin/green-metrics-tool.git /var/www/green-metrics-tool

RUN chown -R www-data:www-data /var/www

RUN printf "postgresql:\n\
  host: green-coding-postgres-container\n\
  user: postgres\n\
  dbname: green-coding\n\
  password: ${postgres_pw}" > /var/www/green-metrics-tool/config.yml

## Now the NGINX part

# Needed for green-coding-api.sock
WORKDIR /tmp/green-metrics-tool/
RUN chown www-data:www-data /tmp/green-metrics-tool/

RUN printf "server {\n\
    listen 80;\n\
    server_name api.green-coding.org api.green-coding.local;\n\
\n\
    location / {\n\
        include proxy_params;\n\
        proxy_pass http://unix:/tmp/green-metrics-tool/green-coding-api.sock;\n\
    }\n\
}\n"\
> /etc/nginx/sites-available/green-coding-api

RUN ln -s /etc/nginx/sites-available/green-coding-api /etc/nginx/sites-enabled/
RUN sed -i -e "s/\/var\/www\/html/\/var\/www\/green-metrics-tool\/website/" /etc/nginx/sites-available/default

EXPOSE 80

WORKDIR /var/www/green-metrics-tool/api

COPY ./docker-entrypoint.sh /docker-entrypoint.sh
CMD ["bash", "/docker-entrypoint.sh"]

# create network: docker network create green-coding-net
# Build with: docker build . --tag green-coding-nginx-gunicorn -f Dockerfile-gunicorn-nginx --build-arg postgres_pw=XXXXXX
# Run with: docker run  -d -p 8000:80 --net green-coding-net --name green-coding-nginx-gunicorn-container green-coding-nginx-gunicorn
# Apply --no-cache if you experience problems